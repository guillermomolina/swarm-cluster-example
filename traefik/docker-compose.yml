version: '3.7'

services:
  server:
    image: library/traefik
    command:
      - '--api.insecure=true'
      - '--entryPoints.web.address=:80'
      - '--entryPoints.websecure.address=:443'
      - '--providers.providersThrottleDuration=2s'
      - '--providers.docker=true'
      - '--providers.docker.watch=true'
      - '--providers.docker.endpoint=unix:///var/run/docker.sock'
      - '--providers.docker.swarmMode=true'
      - '--providers.docker.swarmModeRefreshSeconds=15s'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.network=proxy'
      #- '--providers.docker.defaultRule=Host(${HOST_LIST})'
      #- '--providers.docker.constraints=Label(`traefik.tags`,`public`)'
      - '--accessLog.bufferingSize=0'
      - '--api=true'
      - '--api.dashboard=true'
      - '--log.level=DEBUG'
      #- '--certificatesResolvers.letsencrypt.acme.tlsChallenge=true'
      #- '--certificatesResolvers.letsencrypt.acme.httpChallenge=true'
      #- '--certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint=web'
      #- '--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'
      #- '--certificatesResolvers.letsencrypt.acme.email=admin@${DOMAIN_NAME}'
      #- '--certificatesResolvers.letsencrypt.acme.storage=/var/lib/traefik/acme.json'
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/docker/traefik/volumes/certificates:/var/lib/traefik
      - /opt/docker/traefik/volumes/configs:/run
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      #labels:
        #- 'traefik.enable=true'
        #- 'traefik.tags=public'
        #- 'traefik.docker.network=proxy'
        #- 'traefik.http.routers.traefik-http.rule=Host($HOST_LIST)'
        #- 'traefik.http.routers.traefik-http.entrypoints=web'
        #- 'traefik.http.routers.traefik-http.middlewares=traefik-redirect'
        #- 'traefik.http.routers.traefik-https.rule=Host(`traefik.${DOMAIN_NAME}`)'
        #- 'traefik.http.routers.traefik-https.entrypoints=websecure'
        #- 'traefik.http.routers.traefik-https.middlewares=traefik-auth'
        #- 'traefik.http.routers.traefik-https.service=api@internal'
        #- 'traefik.http.services.traefik-https.loadbalancer.server.port=8080'
        #- 'traefik.http.routers.traefik-https.tls=true'
        #- 'traefik.http.routers.traefik-https.tls.certResolver=letsencrypt'
        #- 'traefik.http.routers.traefik-https.tls.domains[0].main=traefik.${DOMAIN_NAME}'
        #- 'traefik.http.middlewares.traefik-auth.basicauth.users=user:hashedpasword'
        #- 'traefik.http.middlewares.traefik-redirect.redirectscheme.scheme=https'

# https://blog.creekorful.com/2019/10/how-to-install-traefik-2-docker-swarm/
  whoami:
    image: "traefik/whoami"
    networks:
      - proxy
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.docker.network=proxy'
        - 'traefik.http.routers.whoami.rule=Host(`traefik.35.228.247.111.nip.io`)'
        - 'traefik.http.routers.whoami.entrypoints=web'
        - 'traefik.http.services.whoami.loadbalancer.server.port=80'

networks:
  proxy:
    external: true

